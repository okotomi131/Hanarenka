＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

・アピールポイント

＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
　パズルゲームの為、数十シーンにおいて同じ演出や処理を使いまわす場面が多く、
汎用性、拡張性を高めるように意識して制作しました。
UIアニメーションや演出ではDOTweenを使用し、メインの花火を目立たせつつも、
視認しやすいUI配置やアニメーション作成にこだわりました。
　DOTweenを使用するのは今回が初めてだったので、
用意してある機能や記述方法などを理解し、
自分が思った通りのアニメーションを再現できるようになるまで苦労しました。
　ですが、仕様を理解してからはプランナーやデザイナーの希望通りの挙動や処理が
実装できるようになり、今回の作品制作を行う前の自分よりも成長できたと思います。
＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

・[スクリプト名]
▲スクリプト概要
△担当箇所

＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

・ActiveSetting.cs
▲アクティブ状態を管理するスクリプト
△全て

・AnimeManager.cs
▲UIアニメーションの作動タイミングを管理するスクリプト
△全て

・BoardMove.cs
▲ギミックガイドアニメーションを管理するスクリプト
△プレイヤー操作可否処理以外

・ButtonAnime.cs
▲ボタン選択・非選択・押下時にアニメーションするスクリプト
△サウンド処理以外

・CloseButton.cs
▲クリア後紙芝居のボタン入力描画をするスクリプト
△全て

・ClearManager.cs
▲クリア情報を渡すスクリプト
△全て

・ClowdAlpha.cs
▲ゲームの進行度によって雲の描画を変更するスクリプト
△全て

・ClearAnime.cs
▲クリア演出を行うスクリプト
△全て

・CountEnemy.cs
▲タグでオブジェクトの残存数をカウントするスクリプト
△全て

・CutIn.cs
▲ボスステージのカットインを行うスクリプト
△サウンド処理以外

・EndGame.cs
▲ゲーム終了スクリプト
△全て

・EntryAnime.cs
▲画面内にオブジェクトを登場/撤退させるスクリプト
△全て

・FireBelt.cs
▲配置位置から特定の位置まで移動するスクリプト
△全て

・FireFlowerKunDelete.cs
▲クリア演出時の花火玉を削除するオブジェクト
△全て

・ObjectTransformSetting.cs
▲オブジェクトを整列させるスクリプト
△全て

・OpeningAnime.cs
▲開始時の演出を行うスクリプト
△全て

・ReadClearFlag.cs
▲UIアニメーションの作動タイミングを管理するスクリプト
△全て

・SatoButton.cs
▲里シーンのボタンを選択した際に動作するスクリプト
△演出、アニメーション、入力処理を担当

・SaveManager.cs
▲セーブデータ関連の管理を行うスクリプト
△暗号化処理以外

・SelectButton.cs
▲ボタンを選択した際に動作するスクリプト
△演出、アニメーション、入力処理を担当

・SelectMovePlayer.cs
▲ステージ選択中のプレイヤー挙動を行うスクリプト
△OnSelect関数

・StageLine.cs
▲里のアイコンを線で繋ぐスクリプト
△線の色変更処理以外

・TMPAnime.cs
▲クリア時のテキストアニメーションを行うスクリプト
△全て

・VillagePop.cs
▲タイトルに戻るかを確認するポップアップを表示するスクリプト
△全て
